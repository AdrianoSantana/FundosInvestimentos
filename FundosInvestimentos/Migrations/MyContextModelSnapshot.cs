// <auto-generated />
using System;
using FundosInvestimentos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FundosInvestimentos.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("FundosInvestimentos.Models.Fundo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CNPJ")
                        .HasColumnType("text");

                    b.Property<string>("CodigoAnbima")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("InstituicaoId")
                        .HasColumnType("uuid");

                    b.Property<string>("RazaoSocialAdministrador")
                        .HasColumnType("text");

                    b.Property<string>("RazaoSocialDistribuidor")
                        .HasColumnType("text");

                    b.Property<string>("RazaoSocialGestor")
                        .HasColumnType("text");

                    b.Property<double>("Saldo")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("InstituicaoId");

                    b.ToTable("Fundos");
                });

            modelBuilder.Entity("FundosInvestimentos.Models.FundoDistribuido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CNPJ")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("FundoDistribuido");
                });

            modelBuilder.Entity("FundosInvestimentos.Models.FundoFundosDistribuidos", b =>
                {
                    b.Property<Guid>("FundoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FundoDistribuidoId")
                        .HasColumnType("uuid");

                    b.HasKey("FundoId", "FundoDistribuidoId");

                    b.HasIndex("FundoDistribuidoId");

                    b.ToTable("FundoFundosDistribuidos");
                });

            modelBuilder.Entity("FundosInvestimentos.Models.Instituicao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CNPJ")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("text");

                    b.Property<Guid>("TipoInstituicaoId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("TipoInstituicaoId");

                    b.ToTable("Instituicao");
                });

            modelBuilder.Entity("FundosInvestimentos.Models.TipoInstituicao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Tipo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TipoInstituicao");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb05730e-4f5a-4e87-a208-c1f1ba86a9a1"),
                            CreatedAt = new DateTime(2021, 1, 4, 13, 3, 38, 934, DateTimeKind.Utc).AddTicks(6751),
                            Tipo = "Administrador"
                        },
                        new
                        {
                            Id = new Guid("26bfecb7-2344-45fc-9866-8d1a38758c72"),
                            CreatedAt = new DateTime(2021, 1, 4, 13, 3, 38, 934, DateTimeKind.Utc).AddTicks(8274),
                            Tipo = "Gestor"
                        },
                        new
                        {
                            Id = new Guid("8cbd14de-1983-4774-8bdd-4f73a5a75ca2"),
                            CreatedAt = new DateTime(2021, 1, 4, 13, 3, 38, 934, DateTimeKind.Utc).AddTicks(8297),
                            Tipo = "Distribuidor"
                        });
                });

            modelBuilder.Entity("FundosInvestimentos.Models.Fundo", b =>
                {
                    b.HasOne("FundosInvestimentos.Models.Instituicao", "Instituicao")
                        .WithMany("Fundos")
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instituicao");
                });

            modelBuilder.Entity("FundosInvestimentos.Models.FundoFundosDistribuidos", b =>
                {
                    b.HasOne("FundosInvestimentos.Models.FundoDistribuido", "FundoDistribuido")
                        .WithMany("FundoFundosDistribuidos")
                        .HasForeignKey("FundoDistribuidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FundosInvestimentos.Models.Fundo", "Fundo")
                        .WithMany("FundoFundosDistribuidos")
                        .HasForeignKey("FundoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fundo");

                    b.Navigation("FundoDistribuido");
                });

            modelBuilder.Entity("FundosInvestimentos.Models.Instituicao", b =>
                {
                    b.HasOne("FundosInvestimentos.Models.TipoInstituicao", "TipoInstituicao")
                        .WithMany("Instituicao")
                        .HasForeignKey("TipoInstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoInstituicao");
                });

            modelBuilder.Entity("FundosInvestimentos.Models.Fundo", b =>
                {
                    b.Navigation("FundoFundosDistribuidos");
                });

            modelBuilder.Entity("FundosInvestimentos.Models.FundoDistribuido", b =>
                {
                    b.Navigation("FundoFundosDistribuidos");
                });

            modelBuilder.Entity("FundosInvestimentos.Models.Instituicao", b =>
                {
                    b.Navigation("Fundos");
                });

            modelBuilder.Entity("FundosInvestimentos.Models.TipoInstituicao", b =>
                {
                    b.Navigation("Instituicao");
                });
#pragma warning restore 612, 618
        }
    }
}
